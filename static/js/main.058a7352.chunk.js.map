{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","App.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptios.js","components/Notification/Notification.js","components/Stastistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","classes","styles","button","Object","keys","map","option","onClick","type","className","concat","button_good","button_bad","join","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","App","state","leaveFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","positive","Math","round","this","totalFeedback","container","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,OAAS,gCAAgC,YAAc,qCAAqC,WAAa,sC,qBCA3HD,EAAOC,QAAU,CAAC,UAAY,yB,gMCcfC,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,6BAAKD,IACJC,M,gBCqBEC,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC1BC,EAAU,CAACC,IAAOC,QACxB,OACI,mCACKC,OAAOC,KAAKN,GAASO,KAAI,SAACC,GAAD,OACtB,wBAEIC,QAAS,kBAAMR,EAAgBO,IAC/BE,KAAK,SACLC,UACGT,EAAQU,OACI,SAAXJ,GAAqBL,IAAOU,aACjB,QAAXL,GAAoBL,IAAOW,YAC1BC,KAAK,KARd,SASEP,GAROA,SCAVQ,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,4BAAIA,KCATC,G,MAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qCACA,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,oDAAuBC,UAY/BL,EAAWM,aAAe,CACtBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAmB,GAERL,Q,gBC0BAO,E,4MA/CXC,MAAQ,CACRP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAELM,cAAgB,SAACnB,GACb,EAAKoB,UAAS,SAAAC,GAAS,sBAClBrB,EAAQqB,EAAUrB,GAAU,O,EAGrCsB,mBAAqB,kBACrB,EAAKJ,MAAMP,KAAO,EAAKO,MAAMN,QAAU,EAAKM,MAAML,K,EAElDU,gCAAkC,WAClC,IAAMC,EAAW,EAAKN,MAAMP,KAC5B,OAAOa,GAAYC,KAAKC,MAAkB,IAAXF,EAAkB,EAAKF,uB,4CAGtD,WAAU,IAAD,EAC0BK,KAAKT,MAA5BP,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IACjBe,EAAgBD,KAAKL,qBAE3B,OACI,sBAAKnB,UAAWR,IAAOkC,UAAvB,UACA,cAAC,EAAD,CAASxC,MAAM,wBAAf,SACA,cAAC,EAAD,CACGG,QAASmC,KAAKT,MACdzB,gBAAiBkC,KAAKR,kBAIzB,cAAC,EAAD,CAAS9B,MAAM,aAAf,SACCuC,EAAgB,EACjB,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EACPb,mBAAoBY,KAAKJ,oCAEzB,cAAC,EAAD,CAAcd,QAAQ,+B,GAzClBqB,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.058a7352.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__36NXp\",\"button_good\":\"FeedbackOptions_button_good__3sTy6\",\"button_bad\":\"FeedbackOptions_button_bad__1Js-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2ATCl\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\nexport default Section","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    const classes = [styles.button];\r\n    return (\r\n        <>\r\n            {Object.keys(options).map((option) => (\r\n                <button\r\n                    key={option}\r\n                    onClick={() => onLeaveFeedback(option)}\r\n                    type=\"button\"\r\n                    className={\r\n                       classes.concat(\r\n                       (option === 'good' && styles.button_good) ||\r\n                       (option === 'bad' && styles.button_bad)\r\n                       ).join(' ')}\r\n                >{option}\r\n                </button>\r\n            ))}\r\n            \r\n        </>\r\n    )\r\n}\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.object,\r\n    onLeaveFeedback:PropTypes.func\r\n}\r\nexport default FeedbackOptions","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    return <p>{message}</p>\r\n};\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n        <p>Good:{good}</p>\r\n        <p>Neutral:{neutral}</p>\r\n        <p>Bad:{bad}</p>\r\n        <p>Total:{total}</p>\r\n        <p>PositivePercentage:{positivePercentage}</p>\r\n        </>\r\n    )\r\n    \r\n}\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number,\r\n}\r\nStatistics.defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage:0\r\n}\r\nexport default Statistics","import React, { Component } from 'react';\r\nimport Section from './components/Section/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptios';\r\nimport Notification from './components/Notification/Notification';\r\nimport Statistics from './components/Stastistics/Statistics';\r\nimport styles from './App.module.css';\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  }\r\n    leaveFeedback = (option) => {\r\n        this.setState(prevState => ({\r\n            [option]:prevState[option] + 1,\r\n    }))\r\n    }\r\n    countTotalFeedback = () =>\r\n    this.state.good + this.state.neutral + this.state.bad;\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n    const positive = this.state.good;\r\n    return positive && Math.round((positive * 100) / this.countTotalFeedback());\r\n  };\r\n\r\n    render() {\r\n        const { good, neutral, bad } = this.state\r\n        const totalFeedback = this.countTotalFeedback()\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n            <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions\r\n               options={this.state}\r\n               onLeaveFeedback={this.leaveFeedback}\r\n            />\r\n            </Section>\r\n                \r\n            <Section title=\"Statistics\">\r\n            {totalFeedback > 0 ?\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={totalFeedback}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            /> \r\n            : <Notification message=\"No feedback given\"/>}\r\n        </Section>\r\n            </div>\r\n            \r\n        )\r\n    } \r\n}   \r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}